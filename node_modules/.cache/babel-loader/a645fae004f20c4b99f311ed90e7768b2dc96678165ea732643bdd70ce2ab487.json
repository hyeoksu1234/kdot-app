{"ast":null,"code":"var _jsxFileName = \"/Users/hyeoksusmac/Desktop/K.Dot/src/contexts/CartContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport function CartProvider({\n  children\n}) {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const addToCart = newItem => {\n    setCartItems(prevItems => {\n      // 동일한 상품과 옵션이 있는지 확인\n      const existingItemIndex = prevItems.findIndex(item => {\n        if (item.id !== newItem.id) return false;\n\n        // 모든 옵션이 동일한지 확인\n        return Object.entries(item.customOptions).every(([key, value]) => newItem.customOptions[key] === value);\n      });\n      if (existingItemIndex !== -1) {\n        // 동일한 상품이 있으면 수량만 증가\n        const updatedItems = [...prevItems];\n        updatedItems[existingItemIndex].quantity += newItem.quantity;\n        updatedItems[existingItemIndex].totalPrice = updatedItems[existingItemIndex].price * updatedItems[existingItemIndex].quantity;\n        return updatedItems;\n      }\n\n      // 새로운 상품이면 배열에 추가\n      return [...prevItems, newItem];\n    });\n  };\n  const removeFromCart = itemId => {\n    setCartItems(cartItems.filter(item => item.id !== itemId));\n  };\n  const clearCart = () => {\n    setCartItems([]);\n  };\n  const updateCartItemQuantity = (itemId, newQuantity) => {\n    setCartItems(prevItems => prevItems.map(item => item.id === itemId ? {\n      ...item,\n      quantity: newQuantity,\n      totalPrice: item.price * newQuantity\n    } : item));\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      clearCart,\n      updateCartItemQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(CartProvider, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","addToCart","newItem","prevItems","existingItemIndex","findIndex","item","id","Object","entries","customOptions","every","key","value","updatedItems","quantity","totalPrice","price","removeFromCart","itemId","filter","clearCart","updateCartItemQuantity","newQuantity","map","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hyeoksusmac/Desktop/K.Dot/src/contexts/CartContext.jsx"],"sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const CartContext = createContext();\n\nexport function CartProvider({ children }) {\n  const [cartItems, setCartItems] = useState([]);\n\n  const addToCart = (newItem) => {\n    setCartItems(prevItems => {\n      // 동일한 상품과 옵션이 있는지 확인\n      const existingItemIndex = prevItems.findIndex(item => {\n        if (item.id !== newItem.id) return false;\n        \n        // 모든 옵션이 동일한지 확인\n        return Object.entries(item.customOptions).every(([key, value]) => \n          newItem.customOptions[key] === value\n        );\n      });\n\n      if (existingItemIndex !== -1) {\n        // 동일한 상품이 있으면 수량만 증가\n        const updatedItems = [...prevItems];\n        updatedItems[existingItemIndex].quantity += newItem.quantity;\n        updatedItems[existingItemIndex].totalPrice = \n          updatedItems[existingItemIndex].price * updatedItems[existingItemIndex].quantity;\n        return updatedItems;\n      }\n\n      // 새로운 상품이면 배열에 추가\n      return [...prevItems, newItem];\n    });\n  };\n\n  const removeFromCart = (itemId) => {\n    setCartItems(cartItems.filter((item) => item.id !== itemId));\n  };\n\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  const updateCartItemQuantity = (itemId, newQuantity) => {\n    setCartItems((prevItems) =>\n      prevItems.map((item) =>\n        item.id === itemId\n          ? {\n              ...item,\n              quantity: newQuantity,\n              totalPrice: item.price * newQuantity,\n            }\n          : item\n      )\n    );\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        cartItems,\n        addToCart,\n        removeFromCart,\n        clearCart,\n        updateCartItemQuantity,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAE1C,OAAO,SAASK,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMS,SAAS,GAAIC,OAAO,IAAK;IAC7BF,YAAY,CAACG,SAAS,IAAI;MACxB;MACA,MAAMC,iBAAiB,GAAGD,SAAS,CAACE,SAAS,CAACC,IAAI,IAAI;QACpD,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,EAAE,OAAO,KAAK;;QAExC;QACA,OAAOC,MAAM,CAACC,OAAO,CAACH,IAAI,CAACI,aAAa,CAAC,CAACC,KAAK,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAC3DX,OAAO,CAACQ,aAAa,CAACE,GAAG,CAAC,KAAKC,KACjC,CAAC;MACH,CAAC,CAAC;MAEF,IAAIT,iBAAiB,KAAK,CAAC,CAAC,EAAE;QAC5B;QACA,MAAMU,YAAY,GAAG,CAAC,GAAGX,SAAS,CAAC;QACnCW,YAAY,CAACV,iBAAiB,CAAC,CAACW,QAAQ,IAAIb,OAAO,CAACa,QAAQ;QAC5DD,YAAY,CAACV,iBAAiB,CAAC,CAACY,UAAU,GACxCF,YAAY,CAACV,iBAAiB,CAAC,CAACa,KAAK,GAAGH,YAAY,CAACV,iBAAiB,CAAC,CAACW,QAAQ;QAClF,OAAOD,YAAY;MACrB;;MAEA;MACA,OAAO,CAAC,GAAGX,SAAS,EAAED,OAAO,CAAC;IAChC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMgB,cAAc,GAAIC,MAAM,IAAK;IACjCnB,YAAY,CAACD,SAAS,CAACqB,MAAM,CAAEd,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKY,MAAM,CAAC,CAAC;EAC9D,CAAC;EAED,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBrB,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAMsB,sBAAsB,GAAGA,CAACH,MAAM,EAAEI,WAAW,KAAK;IACtDvB,YAAY,CAAEG,SAAS,IACrBA,SAAS,CAACqB,GAAG,CAAElB,IAAI,IACjBA,IAAI,CAACC,EAAE,KAAKY,MAAM,GACd;MACE,GAAGb,IAAI;MACPS,QAAQ,EAAEQ,WAAW;MACrBP,UAAU,EAAEV,IAAI,CAACW,KAAK,GAAGM;IAC3B,CAAC,GACDjB,IACN,CACF,CAAC;EACH,CAAC;EAED,oBACEZ,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IACnBZ,KAAK,EAAE;MACLd,SAAS;MACTE,SAAS;MACTiB,cAAc;MACdG,SAAS;MACTC;IACF,CAAE;IAAAzB,QAAA,EAEDA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAC/B,EAAA,CAhEeF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}